upstream unicorn_<%= @application[:domains].first %> {
 server unix:<%= @application[:deploy_to]%>/shared/sockets/unicorn.sock fail_timeout=0;
}

log_format json '{"@timestamp":"$time_iso8601",'
                '"host":"$server_addr",'
                '"clientip":"$remote_addr",'
                '"size":$body_bytes_sent,'
                '"responsetime":$request_time,'
                '"upstreamtime":"$upstream_response_time",'
                '"upstreamhost":"$upstream_addr",'
                '"http_host":"$host",'
                '"url":"$uri",'
                '"xff":"$http_x_forwarded_for",'
                '"referer":"$http_referer",'
                '"agent":"$http_user_agent",'
                '"status":"$status"}';

server {
  listen 80;
  server_name <%= node[:nginx][:absolute_url] %> <%= @application[:domains].join(" ") %> <%= node[:hostname] %>;

<% if @application[:log_format] %>
  <% @application[:log_format].each do |log_format_name| %>
  access_log <%= node[:nginx][:log_dir] %>/<%= node[:nginx][:absolute_url] %>.access.<%= log_format_name %>.log <%= log_format_name %>;
  <% end %>
<% else %>
  access_log <%= node[:nginx][:log_dir] %>/<%= node[:nginx][:absolute_url] %>.access.log json;
<%end %>

  keepalive_timeout <%= node[:nginx][:keepalive_timeout] %>;
  root <%= @application[:absolute_document_root] %>;

  <% if @application[:nginx] && @application[:nginx][:client_max_body_size] %>
    client_max_body_size <%= @application[:nginx][:client_max_body_size] %>;
  <% end %>

  # https://store.commandp.com/zh-TW/ => https://commandp.com/store IF desktop
  if ($http_user_agent ~* "(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino") {
    set $mobile_rewrite perform;
  }

  if ($http_user_agent ~* "^(1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-)") {
    set $mobile_rewrite perform;
  }

  if ($host ~* <%= @application[:store_redirect][:origin_host] %>) {
    set $mobile_rewrite "${mobile_rewrite}store";
  }

  if ($uri = /zh-TW) {
    set $mobile_rewrite "${mobile_rewrite}home";
  }

  if ($uri = /zh-TW/) {
    set $mobile_rewrite "${mobile_rewrite}home";
  }

  if ($mobile_rewrite = storehome) {
    rewrite ^ <%= @application[:store_redirect][:redirect_url] %> redirect;
    break;
  }

  location / {
    try_files $uri/index.html $uri/index.htm @unicorn;
  }

  location ~* ^/media/ {
    try_files $uri @unicorn;
    expires max;
    break;
  }

  location = /elb_check {
    access_log off;
    return 200 'Welcome ELB';
  }

  location @unicorn {
    # My vpc subnet where ELB resides in
    set_real_ip_from 172.31.16.0/20;
    set_real_ip_from 172.31.0.0/20;

    # Staging Website IP
    set_real_ip_from 54.238.209.18;

    # Production_Ready Website IP
    set_real_ip_from 52.196.40.62;

    # Production Website IP
    set_real_ip_from 52.69.68.205;

    # AWS CloudFront IP/CIDR range
    set_real_ip_from 52.84.0.0/15;
    set_real_ip_from 54.182.0.0/16;
    set_real_ip_from 54.192.0.0/16;
    set_real_ip_from 54.230.0.0/16;
    set_real_ip_from 54.239.128.0/18;
    set_real_ip_from 54.239.192.0/19;
    set_real_ip_from 54.240.128.0/18;
    set_real_ip_from 204.246.164.0/22;
    set_real_ip_from 204.246.168.0/22;
    set_real_ip_from 204.246.174.0/23;
    set_real_ip_from 204.246.176.0/20;
    set_real_ip_from 205.251.192.0/19;
    set_real_ip_from 205.251.249.0/24;
    set_real_ip_from 205.251.250.0/23;
    set_real_ip_from 205.251.252.0/23;
    set_real_ip_from 205.251.254.0/24;
    set_real_ip_from 216.137.32.0/19;
    # always put the following 2 lines in the bottom of ip list
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-NginX-Proxy true;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_redirect off;

  <% if node[:nginx] && node[:nginx][:proxy_read_timeout] -%>
    proxy_read_timeout <%= node[:nginx][:proxy_read_timeout] %>;
  <% end -%>
  <% if node[:nginx] && node[:nginx][:proxy_send_timeout] -%>
    proxy_send_timeout <%= node[:nginx][:proxy_send_timeout] %>;
  <% end -%>

    # If you don't find the filename in the static files
    # Then request it from the unicorn server
    if (!-f $request_filename) {
      proxy_pass http://unicorn_<%= @application[:domains].first %>;
      break;
    }
  }

  location /nginx_status {
    stub_status on;
    access_log off;
    allow 127.0.0.1;
    deny all;
  }

  error_page 500 502 503 504 /500.html;
  location = /500.html {
    root <%= @application[:absolute_document_root] %>;
  }
  <% if node[:nginx][:need_redirect_urls] %>
  <% node[:nginx][:need_redirect_urls].each do |from_url| %>
  if ($host = '<%= from_url %>') {
    rewrite ^/(.*)$ https://<%= node[:nginx][:absolute_url] %>/$1 permanent;
  }
  <% end %>
  <% end %>

  # Enable cors for fonts and svgs
  # http://enable-cors.org/server_nginx.html
  location ~* \.(png|woff2|ttf|ttc|otf|eot|woff|svg|font.css)$ {
    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Credentials' 'true';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
  }
}

server {
  server_name "~^www\.(.*)$" ;
  return 301 $scheme://$1$request_uri;
}

<% if @application[:ssl_support] %>
server {
  listen   443;
  server_name <%= node[:nginx][:absolute_url] %> <%= @application[:domains].join(" ") %> <%= node[:hostname] %>;
  access_log <%= node[:nginx][:log_dir] %>/<%= node[:nginx][:absolute_url] %>-ssl.access.log json;

  ssl on;
  ssl_certificate /etc/nginx/ssl/<%= @application[:domains].first %>.crt;
  ssl_certificate_key /etc/nginx/ssl/<%= @application[:domains].first %>.key;
  <% if @application[:ssl_certificate_ca] -%>
  ssl_client_certificate /etc/nginx/ssl/<%= @application[:domains].first %>.ca;
  <% end -%>

  keepalive_timeout <%= node[:nginx][:keepalive_timeout] %>;

  root <%= @application[:absolute_document_root] %>;

  <% if @application[:nginx] && @application[:nginx][:client_max_body_size] %>
    client_max_body_size <%= @application[:nginx][:client_max_body_size] %>;
  <% end %>

  # https://store.commandp.com/zh-TW/ => https://commandp.com/store IF desktop
  if ($http_user_agent ~* "(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino") {
    set $mobile_rewrite perform;
  }

  if ($http_user_agent ~* "^(1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-)") {
    set $mobile_rewrite perform;
  }

  if ($host ~* <%= @application[:store_redirect][:origin_host] %>) {
    set $mobile_rewrite "${mobile_rewrite}store";
  }

  if ($uri ~* /(zh-TW|zh-CN|jp|en)$) {
    set $mobile_rewrite "${mobile_rewrite}home";
  }

  if ($uri ~* /(zh-TW|zh-CN|jp|en)/$) {
    set $mobile_rewrite "${mobile_rewrite}home";
  }

  if ($mobile_rewrite = storehome) {
    rewrite ^ <%= @application[:store_redirect][:redirect_url] %> redirect;
    break;
  }

  location / {
    try_files $uri/index.html $uri/index.htm @unicorn;
  }

  location ~* ^/media/ {
    try_files $uri @unicorn;
    expires max;
    break;
  }

  location = /elb_check {
    access_log off;
    return 200 'Welcome ELB';
  }

  location @unicorn {
    # My vpc subnet where ELB resides in
    set_real_ip_from 172.31.16.0/20;
    set_real_ip_from 172.31.0.0/20;

    # Staging Website IP
    set_real_ip_from 54.238.209.18;

    # Production_Ready Website IP
    set_real_ip_from 52.196.40.62;

    # Production Website IP
    set_real_ip_from 52.69.68.205;

    # AWS CloudFront IP/CIDR range
    set_real_ip_from 52.84.0.0/15;
    set_real_ip_from 54.182.0.0/16;
    set_real_ip_from 54.192.0.0/16;
    set_real_ip_from 54.230.0.0/16;
    set_real_ip_from 54.239.128.0/18;
    set_real_ip_from 54.239.192.0/19;
    set_real_ip_from 54.240.128.0/18;
    set_real_ip_from 204.246.164.0/22;
    set_real_ip_from 204.246.168.0/22;
    set_real_ip_from 204.246.174.0/23;
    set_real_ip_from 204.246.176.0/20;
    set_real_ip_from 205.251.192.0/19;
    set_real_ip_from 205.251.249.0/24;
    set_real_ip_from 205.251.250.0/23;
    set_real_ip_from 205.251.252.0/23;
    set_real_ip_from 205.251.254.0/24;
    set_real_ip_from 216.137.32.0/19;
    # always put the following 2 lines in the bottom of ip list
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-NginX-Proxy true;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_redirect off;


  <% if node[:nginx] && node[:nginx][:proxy_read_timeout] -%>
    proxy_read_timeout <%= node[:nginx][:proxy_read_timeout] %>;
  <% end -%>
  <% if node[:nginx] && node[:nginx][:proxy_send_timeout] -%>
    proxy_send_timeout <%= node[:nginx][:proxy_send_timeout] %>;
  <% end -%>

    # If you don't find the filename in the static files
    # Then request it from the unicorn server
    if (!-f $request_filename) {
      proxy_pass http://unicorn_<%= @application[:domains].first %>;
      break;
    }
  }

  error_page 500 502 503 504 /500.html;
  location = /500.html {
    root <%= @application[:absolute_document_root] %>;
  }

  # Need_redirect_urls
  <% node[:nginx][:need_redirect_urls].each do |from_url| %>
  if ($host = '<%= from_url %>') {
    rewrite ^/(.*)$ https://<%= node[:nginx][:absolute_url] %>/$1 permanent;
  }
  <% end %>

  # Enable cors for fonts and svgs
  # http://enable-cors.org/server_nginx.html
  location ~* \.(png|woff2|ttf|ttc|otf|eot|woff|svg|font.css)$ {
    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Credentials' 'true';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
  }
}
<% end %>
